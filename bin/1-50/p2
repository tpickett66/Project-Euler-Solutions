#!/usr/bin/env ruby
# endoding: UTF-8
$:.unshift(File.dirname(__FILE__) + '/../../lib') unless $:.include?(File.dirname(__FILE__) + '/../../lib')

# Each new term in the Fibonacci sequence is generated by adding the
# previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# 
# By considering the terms in the Fibonacci sequence whose values do not
# exceed four million, find the sum of the even-valued terms.

require 'pes'

# reference sequence for first 38 values
# ref = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610,
#        987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025,
#        121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578,
#        5702887, 9227465, 14930352, 24157817, 39088169]
# ref_evens = ref.select{|val| val.even?}

ans = 4613732

max = 4_000_000
# max = 39088169
vals = [0,1,1]

total = 0
evens = [0]
while vals[-2] + vals[-1] <= max
  new_val = vals[-2] + vals[-1]
  if new_val.even?
    total += new_val
    evens << new_val
  end
  vals << new_val
end


puts vals.inspect
puts evens.inspect
puts total
puts total <=> ans