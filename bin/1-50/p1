#!/usr/bin/env ruby
# endoding: UTF-8
$:.unshift(File.dirname(__FILE__) + '/../../lib') unless $:.include?(File.dirname(__FILE__) + '/../../lib')

# http://projecteuler.net/problem=1
# If we list all the natural numbers below 10 that are multiples of 3 or 5,
# we get 3, 5, 6 and 9. The sum of these multiples is 23.
#
# Find the sum of all the multiples of 3 or 5 below 1000.

# My twist on this will be finding the sum of all the natural numbers 
# being a multiple of 3 or 5 below a number supplied on the command line

require 'pes'

if ARGV[0].nil? || ARGV[0].is_a?(Numeric)
  print "p1.rb = Solution to Project Euler's first posted problem\n"
  print "\n"
  print "USAGE: p1.rb NUMBER_TO_CHECK\n"
  print "\n"
  print "e.x.:\n"
  print "$: p1.rb 10\n"
  print "\nYeilds:\n"
  print `#{File.expand_path(__FILE__)} 10`
else
  number = ARGV[0].to_i
  start_time = Time.now
  print "Checking: #{number}\n"
  found = []
  (1...number).each do |i|
    print "."
    found << i if i%3 == 0 || i%5 == 0
  end
  result = found.inject(0){|m,o| m + o}
  stop_time = Time.now
  et = stop_time - start_time
  print "\nTask Complete!\n"
  print "Numbers matching criteria: #{found.join(', ')}\n"
  print "Sum: #{result}\n"
  print "Elapsed Time: #{et} sec"
end